// <auto-generated />
using System;
using Domain.EntityConfiguration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace webapi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Models.Entities.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<int>("IdExterno");

                    b.Property<string>("Nome")
                        .HasMaxLength(100);

                    b.Property<int>("SistemaId");

                    b.HasKey("EmpresaId");

                    b.HasIndex("IdExterno");

                    b.HasIndex("SistemaId");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("Domain.Models.Entities.GrupoEmpresa", b =>
                {
                    b.Property<int>("GrupoEmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpresaId");

                    b.Property<int>("MatrizIdExterno");

                    b.Property<int>("SistemaId");

                    b.HasKey("GrupoEmpresaId");

                    b.ToTable("GrupoEmpresa");
                });

            modelBuilder.Entity("Domain.Models.Entities.Menus_Acesso", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao_Menu");

                    b.HasKey("ID");

                    b.ToTable("Menus_Acesso");
                });

            modelBuilder.Entity("Domain.Models.Entities.Perfil", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.Property<string>("IDs_Menus_Acesso");

                    b.HasKey("ID");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("Domain.Models.Entities.Sistema", b =>
                {
                    b.Property<int>("SistemaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.HasKey("SistemaId");

                    b.ToTable("Sistema");
                });

            modelBuilder.Entity("Domain.Models.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataUltimoLogin");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<int>("EmpresaId");

                    b.Property<string>("Nome")
                        .HasMaxLength(100);

                    b.Property<string>("NovaSenha");

                    b.Property<int>("PerfilID");

                    b.Property<string>("Senha");

                    b.Property<string>("Token");

                    b.Property<bool>("ativo");

                    b.HasKey("UsuarioId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("PerfilID");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Domain.Models.Entities.Empresa", b =>
                {
                    b.HasOne("Domain.Models.Entities.Sistema", "Sistema")
                        .WithMany()
                        .HasForeignKey("SistemaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.Models.Entities.Usuario", b =>
                {
                    b.HasOne("Domain.Models.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Models.Entities.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
